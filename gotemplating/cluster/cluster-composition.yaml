apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xecscluster.microservices.dmaganto.infra
spec:
  compositeTypeRef:
    apiVersion: microservices.dmaganto.infra/v1alpha1
    kind: XECSCluster
  mode: Pipeline
  pipeline:
  - step: environment-config
    functionRef:
      name: function-environment-configs
    input:
      apiVersion: environmentconfigs.fn.crossplane.io/v1beta1
      kind: Input
      spec:
        environmentConfigs:
          - type: Reference
            ref:
              name: tenant1-config
  - step: go-templating-resources
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{- $xr := getCompositeResource . }}
          {{- $s3Bucket := printf "cluster-%s" (get $xr.spec.resourceConfig "tenant") }}
          {{- $clusteName := printf "%s-%s" (get $xr.spec.resourceConfig "tenant") (get $xr.spec.parameters "clusterName") }}
          {{- $region := (get $xr.spec.resourceConfig "region") }}
          {{- $tenant := (get $xr.spec.resourceConfig "tenant") }}
          ---
          apiVersion: meta.gotemplating.fn.crossplane.io/v1alpha1
          kind: ExtraResources
          requirements:
            bucket:
              apiVersion: s3.aws.upbound.io/v1beta1
              kind: Bucket
              matchName: {{ $s3Bucket }}
          {{- with .extraResources }}
          {{ $someExtraResources := index . "bucket" }}
          {{- range $i, $extraResource := $someExtraResources.items }}
          ---
          apiVersion: microservices.dmaganto.infra/v1alpha1
          kind: XECSCluster
          metadata:
            name: {{ $xr.metadata.name }}
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $clusteName }}
          status:
            metadata:
              managedResources:
                region: {{ $region }}
                cluster:
                  name: {{ $tenant }}
          ---
          apiVersion: ecs.aws.upbound.io/v1beta1
          kind: Cluster
          metadata:
            name: {{ $clusteName }}
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $clusteName }}
          spec:
            deletionPolicy: {{ get $xr.spec.resourceConfig "deletionPolicy" }}
            forProvider:
              region: {{ $region }}
              tags:
                s3HostedZoneId: {{ $extraResource.resource.status.atProvider.hostedZoneId }}
          {{- if $xr.spec.parameters.multipleClusters }}
          ---
          apiVersion: ecs.aws.upbound.io/v1beta1
          kind: Cluster
          metadata:
            name: {{ printf "%s-1" $tenant }}
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ printf "%s-1" $tenant }}
          spec:
            deletionPolicy: {{ get $xr.spec.resourceConfig "deletionPolicy" }}
            forProvider:
              region: {{ $region }}
          {{- end}}
          {{- if $xr.spec.parameters.capacityProvider }}
          ---
          apiVersion: ecs.aws.upbound.io/v1beta1
          kind: ClusterCapacityProviders
          metadata:
            name: {{ $tenant }}
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $xr.metadata.name }}
          spec:
            deletionPolicy: {{ get $xr.spec.resourceConfig "deletionPolicy" }}
            forProvider:
              clusterNameSelector:
                matchControllerRef: true
              region: {{ $region }}
          {{- end }}
          {{- end }}
          {{- end }}
  - step: automatically-detect-ready-composed-resources
    functionRef:
      name: function-auto-ready